# The name of the workflow.
name: Build, Test, and Deploy code on Ec2 instance
# Run the workflow when code is pushed to the main branch
on:
  push:
    branches:
      - main
# This is the workflow that is being run.
jobs:
  build-test-and-deploy:
    # This is telling GitHub to run the workflow on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3

  iac-build-and-deploy:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: build-test-and-deploy
    outputs:
      target_url: ${{ steps.running-terraform-commands.outputs.target }}
    steps:
      - name: Checkout codes
        uses: actions/checkout@v4
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESSKEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRETEKEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"
      - name: Terraform Init, Format, Validate
        run: |
            terraform init
            terraform fmt -check
            terraform validate -no-color
        working-directory: terraform
          
      - name: Terraform Plan to deploy AWS EC2 Instance and run shell script
        run: terraform plan --var-file=terraform.tfvars
        working-directory: terraform
      - name: Terraform Apply
        run: terraform apply --auto-approve
        working-directory: terraform
      
      - name: Execute kubeArmor deploy script to install KubeArmor + performance script
        run: sh KubeArmor_deploy.sh  

<<<<<<< HEAD
      
=======
  # zap_scan:
  #   name: OWASP-ZAP integration 
  #   runs-on: ubuntu-latest
  #   permissions: write-all
  #   needs: iac-build-and-deploy
  #   steps:
  #     - name: Wait for 2 minutes
  #       run: sleep 120
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         ref: main
  #     - name: ZAP Scan
  #       uses: zaproxy/action-baseline@v0.11.0
  #       with:
  #      #   token: ${{ secrets.GITHUB_TOKEN }}
  #         docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
  #         target: 'http://${{ needs.iac-build-and-deploy.outputs.target_url }}:3000'
  #         rules_file_name: '.zap/rules.tsv'
  #         cmd_options: '-a'
  #     - name: Upload ZAP Scan Report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: zap-report
  #         path: |
  #           report_html.html
  #           report_json.json
  snyk_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
# Snyk security scan step for web
#      - name: Checkout repository
#        uses: actions/checkout@v2

#      - name: Install Snyk CLI
#        run: npm install -g snyk

#      - name: Snyk Security Scans
#        run: snyk test --org=nayanaatu --project-name='reactapp-test'
#        continue-on-error: true
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        working-directory: terraform
                
#      - name: Snyk Monitor
#        run: snyk monitor --org=nayanaatu --project-name='L00179216_MSc_Project_KubeArmor'
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        working-directory: terraform
                
  # Snyk security scan step for Code Scanning

#      - name: Run Snyk to check for vulnerabilities
#        uses: snyk/actions/node@master
#        continue-on-error: true
#        with:
#          args: ./WWA-backend-master --sarif-file-output=snyk.sarif
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#      - name: Upload SARIF to GitHub Security Center
#        uses: github/codeql-action/upload-sarif@v3
#        with:
#          sarif_file: snyk.sarif
#          category: 'Snyk OpenSource Unique Category'
>>>>>>> 57412ffd8c2fa418142a07efe8d07b2dbd3d0b57

